user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include	  /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log    /var/log/nginx/access.log;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

    # include /etc/nginx/conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default	    "upgrade";
    }

    server {
		listen 80 default_server;
		server_name cleanmedina.com;
		server_tokens off;
		gzip on;
    	gzip_comp_level 4;
    	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/x-protobuf;

		# disable request buffering
		# proxy_request_buffering off;

		# For SSL
		location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

		location / {
        return 301 https://$host$request_uri;
    	} 

	}

	server {
		listen 443 ssl;
		server_name cleanmedina.com;
		server_tokens off;
		gzip on;
    	gzip_comp_level 4;
    	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/x-protobuf;

		ssl_certificate     /etc/letsencrypt/live/cleanmedina.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cleanmedina.com/privkey.pem;
        include             /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

		# For Fastapi App
		location /api {
			proxy_pass  http://fastapi:80;
    	    proxy_http_version    1.1;
            proxy_set_header   Connection $connection_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
			proxy_set_header   Host $host;
			proxy_set_header   X-Real-IP $remote_addr;
			proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header   X-Forwarded-Host $server_name;
		}

		# For Hasura
		location ~* ^(\/console|\/v1|\/healthz) {
    	    proxy_pass  http://hasura:8080;
    	    proxy_http_version    1.1;
            proxy_set_header   Connection $connection_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
			proxy_set_header   Host $host;
			proxy_set_header   X-Real-IP $remote_addr;
			proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header   X-Forwarded-Host $server_name;
    	}

		# For React App
		location / {
    		# add_header Content-Type text/plain;
			# return 200 'Hello from Braga Tech!';
			root /var/www/html;
			try_files $uri /index.html;
		}
	}
}