user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include	  /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log    /var/log/nginx/access.log;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

    # include /etc/nginx/conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default	    "upgrade";
    }

    server {
		listen 80 default_server;
		gzip on;
    	gzip_comp_level 4;
    	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/x-protobuf;

		# CORS
		add_header Access-Control-Allow-Origin "*.jabarprov.go.id";
		add_header Access-Control-Allow-Origin "mkk.braga.co.id";

		# Secure Clickjacking
		add_header X-Frame-Options "SAMEORIGIN"; 

		# disable request buffering
		proxy_request_buffering off;

		proxy_http_version    1.1;
		proxy_set_header   Connection $connection_upgrade;
		proxy_set_header   Upgrade $http_upgrade;
		proxy_set_header   Host $host;
		proxy_set_header   X-Real-IP $remote_addr;
		proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header   X-Forwarded-Host $server_name;

		# For Fastapi App
		location /api {
			client_max_body_size 3m;
			
			proxy_pass  http://fastapi-tcc:80;
		}

		# For Hasura
		location ~* ^(\/console|\/v1|\/healthz) {
    	    proxy_pass  http://hasura-tcc:8080;
    	}

		# For MinIO
		location /tcc-storage/ {
			# enlarge body size to accomodate file upload
			client_max_body_size 5m;

			proxy_pass  http://storage-minio-tcc-1:9000/tcc-storage/;
		}
		# For React App
		location / {
    		# add_header Content-Type text/plain;
			# return 200 'Hello from Braga Tech!';
			root /var/www/html;
			try_files $uri /index.html;
		}

		
	}
}